name: Example workflow

on:
  push:
    branches:
      - main
    
env:
  SOME_VAR: ok

jobs:
  test-simple-tasks:
    runs-on: ubuntu-latest
    env:
      task_variable: "alex variable"
    steps:
      - uses: actions/checkout@v3
      - name: Get author name
        id: author
        run: echo "author=$(git show -s --format=%an)" >> $GITHUB_OUTPUT
      - name: Print author name
        run: echo "${{ steps.author.outputs.author }}"
      - name: Print author name with an environment variable
        run: echo $AUTHOR_NAME
        env:
          AUTHOR_NAME: ${{ steps.author.outputs.author }}
      - name: Log levels
        run: |
          #       echo "::debug::This is a debug message"
          echo "::notice::This is an info message"
          echo "::notice::Printin env variable: ${{ env.task_variable }}"
          echo "::warning::This is a warning"
          echo "::error::This is an error"    
      - name: Print variable
        run: |
          echo "This is your variable $SOME_VAR"

  rust_multi_arch:
    name: OS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        # build: [x86_64-linux, x86_64-linux, x86_64-macos, aarch64-macos, x86_64-windows] #, x86_64-win-gnu, win32-msvc aarch64-linux, 
        include:
        - build: x86_64-linux
          os: ubuntu-20.04
          rust: nightly
          target: x86_64-unknown-linux-gnu
          cross: false
        - build: x86_64-linux
          os: ubuntu-22.04
          rust: nightly
          target: x86_64-unknown-linux-gnu
          cross: false
        - build: x86_64-macos
          os: macos-latest
          rust: nightly
          target: x86_64-apple-darwin
          cross: false
        - build: x86_64-windows
          os: windows-latest
            #os: windows-2019
          rust: nightly
          target: x86_64-pc-windows-msvc
          cross: false
        - build: aarch64-macos
          os: macos-latest
          rust: nightly
          target: aarch64-apple-darwin
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true

      - name: Run cargo test
        if: matrix.build != 'aarch64-macos'
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: test
          args: --release --locked --target ${{ matrix.target }}

      - name: print job name windows
        if: matrix.build == 'x86_64-windows' 
        shell: cmd
        run: |
            @chcp 65001>nul
            echo foo=bar >> $GITHUB_OUTPUT
            echo "hello!" 
            echo "tasl variable " 
            echo "JOB_NAME=$JOB_NAME" >> $GITHUB_ENV
            echo "JOB NAME:" ${{ env.JOB_NAME }}
      - name: print job name 
        if: matrix.build != 'x86_64-windows' 
        run: |
          JOB_NAME="OS ${{ matrix.os }}"
          echo $JOB_NAME
          echo "JOB_NAME=$JOB_NAME" >> $GITHUB_ENV
          #echo "JOB NAME:" ${{ env.JOB_NAME }}
          echo "::notice:: finishing task on ${{ env.JOB_NAME }}"



  ubuntu_2204_task:
    needs: windows_runner
    runs-on: ubuntu-22.04
    steps:
      - name: Log levels
        run: |
         echo "echo from ubuntu 2204!"
         echo "::notice:: ubuntu 2204 tasks finished!"

  windows_runner:
    runs-on: windows-latest
    env:
      win_var1: "windows_variables"
    steps:
    - uses: actions/checkout@v3
    - shell: cmd
      run: |
        @chcp 65001>nul
        echo foo=bar >> $GITHUB_OUTPUT
        echo "hello from windows job!" 
        echo "windows prints its env value ${{ env.win_var1 }}" 
        echo "windows global variable ${{ env.SOME_VAR }} "
        echo "::notice:: windows task finished!"

