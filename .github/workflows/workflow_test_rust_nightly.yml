name: rust nightly crosscompile test

on:
  push:
    branches:
      - main
    
env:
  SOME_VAR: ok
  package_to_test: '--manifest-path Cargo.toml'
    #package_to_test: '--manifest-path tests/test1/Cargo.toml'

jobs:

  rust_multi_arch:
    name: OS ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: 
        # build: [x86_64-linux, x86_64-linux, x86_64-macos, aarch64-macos, x86_64-windows] #, x86_64-win-gnu, win32-msvc aarch64-linux, 
        include:
        - build: x86_64-linux
          os: ubuntu-20.04
          rust: nightly
          target: x86_64-unknown-linux-gnu
          cross: false
        - build: x86_64-linux
          os: ubuntu-22.04
          rust: nightly
          target: x86_64-unknown-linux-gnu
          cross: false
        - build: x86_64-macos
          os: macos-latest
          rust: nightly
          target: x86_64-apple-darwin
          cross: false
        - build: x86_64-windows
          os: windows-latest
            #os: windows-2019
          rust: nightly
          target: x86_64-pc-windows-msvc
          cross: false
        - build: aarch64-macos
          os: macos-latest
          rust: nightly
          target: aarch64-apple-darwin
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          components: rustfmt, clippy
      - name: rust cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: ${{ env.package_to_test }}
      - name: rust cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: clippy
          args: ${{ env.package_to_test }} -- -D warnings
      - name: rust cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: ${{ env.package_to_test }}

      - name: print job name windows
        if: matrix.build == 'x86_64-windows' 
        shell: cmd
        run: |
            @chcp 65001>nul
            echo foo=bar >> $GITHUB_OUTPUT
            echo "hello!" 
            echo "tasl variable " 
            echo "JOB_NAME=$JOB_NAME" >> $GITHUB_ENV
            echo "JOB NAME:" ${{ env.JOB_NAME }}
      - name: print job name 
        if: matrix.build != 'x86_64-windows' 
        run: |
          JOB_NAME="OS ${{ matrix.os }}"
          echo $JOB_NAME
          echo "JOB_NAME=$JOB_NAME" >> $GITHUB_ENV
          echo "::notice:: finishing task on ${{ env.JOB_NAME }}"




